Given an array A of strings made only from lowercase letters, return a list of all characters that show up in all strings within the list (including duplicates).  For example, if a character occurs 3 times in all strings but not 4 times, you need to include that character three times in the final answer.

You may return the answer in any order.

 

Example 1:

Input: ["bella","label","roller"]
Output: ["e","l","l"]
Example 2:

Input: ["cool","lock","cook"]
Output: ["c","o"]
 

Note:

1 <= A.length <= 100
1 <= A[i].length <= 100
A[i][j] is a lowercase letter

==================================================
Sol:

class Solution {
public:
    vector<string> commonChars(vector<string>& A) {
        int final_h[26];
        for(int i=0;i<26;i++){
            final_h[i]=INT_MAX;
        }
        for(string s:A){
            int h[26]={0};
            for(int i=0;i<s.size();i++){
                h[s[i]-'a']++;
            }
            for(int i=0;i<26;i++){
                final_h[i]=min(final_h[i],h[i]);
            }
        }
        vector<string> v;
        for(int i=0;i<26;i++){
            while(final_h[i]){
                string s(1,char(i+'a'));//Char to String
                v.push_back(s);
                final_h[i]--;
            }
        }
        return v;
    }
};

//Concept : How to convert a char to String
// String s(1,x) where 1 is the size of the char and x is char itself.
