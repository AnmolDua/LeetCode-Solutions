Given a non-negative integer N, find the largest number that is less than or equal to N with monotone increasing digits.

(Recall that an integer has monotone increasing digits if and only if each pair of adjacent digits x and y satisfy x <= y.)

Example 1:
Input: N = 10
Output: 9
Example 2:
Input: N = 1234
Output: 1234
Example 3:
Input: N = 332
Output: 299
Note: N is an integer in the range [0, 10^9].
===================================================

Sol:
class Solution {
public:
    int monotoneIncreasingDigits(int N) {
        string ans = to_string(N);
        int len = ans.length(), idx = len;
        for(int i = len - 2; i >= 0; --i){
            if(ans[i] > ans[i+1]){
                idx = i + 1;
                ans[i]--;
            }
        }
        for(int i = idx; i < len; ++i)
            ans[i] = '9';
        return stoi(ans);
    }
};
