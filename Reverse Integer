Given a 32-bit signed integer, reverse digits of an integer.

Example 1:

Input: 123
Output: 321
Example 2:

Input: -123
Output: -321
Example 3:

Input: 120
Output: 21
Note:
Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [−231,  231 − 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.

==================================================
Sol:

class Solution {
public:
    int reverse(int x) {
        bool flag=0;
        if(x>=INT_MAX || x<=INT_MIN){return 0;}
        if(x<0){flag=1;x=abs(x);}
        int temp=x;
         int ans=0;
        while(temp>0){
          if(ans>(INT_MAX)/10){return 0;}
          ans=ans*10+(temp%10);
          temp=temp/10;
        }
        if(flag){return -ans;}
        else return ans;
    }
};
