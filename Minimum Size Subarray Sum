Given an array of n positive integers and a positive integer s, find the minimal length of a contiguous subarray of which the sum â‰¥ s. If there isn't one, return 0 instead.

Example: 

Input: s = 7, nums = [2,3,1,2,4,3]
Output: 2
Explanation: the subarray [4,3] has the minimal length under the problem constraint.

========================================================
Sol:

class Solution {
public:
    int minSubArrayLen(int s, vector<int>& nums) {
        int ans=INT_MAX;
        int left=0;
        int curr_val=0;
        for(int i=0;i<nums.size();i++){
            curr_val+=nums[i];
            while(curr_val>=s){
                ans=min(ans,i-left+1);
                curr_val-=nums[left];
                left++;
            }
        }
        if(ans!=INT_MAX){return ans;}
        else {return 0;}
    }
};
