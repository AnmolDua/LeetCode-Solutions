Given two integers A and B, return any string S such that:

S has length A + B and contains exactly A 'a' letters, and exactly B 'b' letters;
The substring 'aaa' does not occur in S;
The substring 'bbb' does not occur in S.
 

Example 1:

Input: A = 1, B = 2
Output: "abb"
Explanation: "abb", "bab" and "bba" are all correct answers.
Example 2:

Input: A = 4, B = 1
Output: "aabaa"
 

Note:

0 <= A <= 100
0 <= B <= 100
It is guaranteed such an S exists for the given A and B.

===========================================================
Sol:

class Solution {
public:
    string strWithout3a3b(int A, int B) {
        char a='a';
        char b='b';
        int ca=A;
        int cb=B;
        if(ca<cb){
            ca=B;
            cb=A;
            b='a';
            a='b';
        }
        string res="";
        while(ca>0){
            res+=a;
            ca--;
            if(ca>cb){
                res+=a;
                ca--;
            }
            if(cb>0){
                res+=b;
                cb--;
            }
        }
        return res;
    }
};
